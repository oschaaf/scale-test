# Gather facts
- hosts: hyperfoil
  connection: local
  ignore_unreachable: false
  tasks: []
- hosts: hyperfoil_controller
  tasks:
  - name: Start test
    include_role:
      name: hyperfoil.hyperfoil_test
    when: hyperfoil_deployer == "ssh"
    vars:
      test_name: test
- hosts: localhost
  connection: local
  tasks:
  - set_fact:
      num_apps: "{{ (num_dc | int) // 5 }}"
  - name: Find workload nodes
    shell: "oc get node -l test.role=workload -o json | jq -r '.items[].metadata.name'"
    register: workload_cmd
  - name: Get workload pod count
    loop: "{{ workload_cmd.stdout.split() }}"
    shell: "oc get pod -n {{ namespace }} --field-selector=spec.nodeName={{item}},status.phase=Running -o json | jq '.items | length'"
    register: workload_counts
  - name: Calculate pod count difference
    set_fact:
      min_pods: "{{ workload_counts.results | map(attribute='stdout') | list | min }}"
      max_pods: "{{ workload_counts.results | map(attribute='stdout') | list | max }}"
      total_pods: "{{ workload_counts.results | map(attribute='stdout') | list | map('int') | sum }}"
  - name: Test total number of pods
    when: "(total_pods | int) != (num_dc | int) * (pods_per_dc | int)"
    fail:
      msg: "Incorrect number of pods: expected {{ (num_dc | int) * (pods_per_dc | int) }} found {{ total_pods }}"
  #- name: Test difference
  #  when: "(max_pods | int) - (min_pods | int) > 1"
  #  fail:
  #    msg: "Unbalanced pods: min = {{ min_pods }}, max = {{ max_pods }} "
  - when: target == 'routers'
    block:
    - name: Find routers
      command: "oc get po -n openshift-ingress -o jsonpath='{.items[*].status.hostIP}'"
      register: router_cmd
    - name: Get number of ingress gateways
      shell: "oc get po -n {{ control_plane }} -l istio=ingressgateway -o json | jq '.items | length'"
      register: gateway_cmd
    - name: Set routers
      set_fact:
        endpoints: "{{ router_cmd.stdout.split() }}"
        num_routers: "{{ router_cmd.stdout.split() | length }}"
        endpoint_port: 443
        num_gateways: "{{ gateway_cmd.stdout }}"
      failed_when: num_routers != expected_routers or num_gateways != expected_gateways
  - when: target == 'gateways'
    block:
    - name: Get ingress gateways
      shell: "oc get po -n {{ control_plane }} -l istio=ingressgateway -o jsonpath='{.items[*].status.podIP}'"
      register: gateway_cmd
    - set_fact:
        endpoints: "{{ gateway_cmd.stdout.split() }}"
        num_gateways: "{{ gateway_cmd.stdout.split() | length }}"
        num_routers: 0
        endpoint_port: "{{ gateway_port }}"
      failed_when: num_gateways != "1"
  - when: target == 'services'
    block:
    - name: Find services
      command: "oc get svc -n {{ namespace }} -o jsonpath='{.items[*].spec.clusterIP}'"
      register: svc_cmd
    - name: Set endpoints
      set_fact:
        endpoints: "{{ svc_cmd.stdout.split() }}"
        num_routers: 0
        num_gateways: 0
        endpoint_port: 8443
      failed_when: (endpoints | length) == 0

  - name: Get number of virtual services
    shell: "oc get vs -n {{ namespace }} -o json | jq '.items | length'"
    register: virtualservices
  - name: Start test
    include_role:
      name: hyperfoil.hyperfoil_test
    when: hyperfoil_deployer == "k8s"
    vars:
      run_description: "{{ namespace }}%20R%3D{{ num_routers }}%20G%3D{{ num_gateways }}%20P%3D{{ total_pods }}%20VS%3D{{ virtualservices.stdout }}"
  - name: Show run ID
    debug:
      msg: "Run ID was {{ test_runid }}"
